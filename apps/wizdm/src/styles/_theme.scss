@import '~@angular/material/theming';
@import 'material';
@import 'markdown';
@import 'elements';

// Thes file is actually extending the standard Angular Material theme
// with customized application specific colors ans typography styles

// Define the main font family
$wm-font-family: 'Ubuntu, sans-serif';

// Creates a customized material typography first...
$wm-typography: mat-typography-config(
  $font-family:   $wm-font-family,
  $headline:      mat-typography-level(32px, 48px, 700),
  $title:         mat-typography-level(24px, 32px, 600),
  $subheading-2:  mat-typography-level(20px, 28px, 600),
  $subheading-1:  mat-typography-level(18px, 24px, 600),
  $body-2:        mat-typography-level(18px, 24px, 500),
  $body-1:        mat-typography-level(16px, 20px, 500),
  $button:        mat-typography-level(16px, 20px, 500)
);
//.. than extends with some application specific values
$wm-typography: extend-material-typography($wm-typography, (
  logo:           mat-typography-level(22px, 24px, 600),
  social:         mat-typography-level(22px, 24px, 600),
  //footnote:       mat-typography-level(16px, 20px, 400),
  //toc:            mat-typography-level(18px, 24px, 500)
));

// Define the main theme colors palettes.
$wm-primary: mat-palette($mat-blue);
$wm-accent:  mat-palette($mat-indigo, A200, A100, A400);
$wm-warn:    mat-palette($mat-red);

// Creates a standard material light theme first...
$wm-theme: mat-light-theme($wm-primary, $wm-accent, $wm-warn);
//... than extends the theme with customized fore/background values
$wm-theme: extend-material-theme($wm-theme, 

  $foreground: (
    // Overwrites some Angular Material standard values
    base:              mat-color($wm-primary, 900),
    disabled-button:   rgba(mat-color($wm-primary, 900), 0.26),
    icon:              mat-color($wm-primary),
    icons:             mat-color($wm-primary),
    text:              rgba(mat-color($wm-primary, 900), 0.87),
    slider-min:        rgba(mat-color($wm-primary, 900), 0.87),
    slider-off:        rgba(mat-color($wm-primary, 900), 0.26),
    slider-off-active: rgba(mat-color($wm-primary, 900), 0.38),

    // Adds extra application specific foreground extension
    contrast:          white,
    edit-box:          rgba(white, 0.8),
  
    // Adds Elements/Markdown specific foreground extensions
    toggler:           mat-color($mat-grey, 500),
    action:            mat-color($wm-primary),
    link:              mat-color($wm-primary)
  ),

  $background: (
    // Overwrites some Angular Material standard values
    status-bar:       white,
    app-bar:          white,
    background:       white,

    // Appends extra application specific background extensions
    edit-box:         rgba(mat-color($mat-blue, 900), 0.8)
  )
);

// Extracts global fore/background palettes to simplify value comsumption across the app
$wm-theme-foreground: map-get($wm-theme, foreground);
$wm-theme-background: map-get($wm-theme, background);

/*
// Helper to dig into themes
@function mat-theme-get($config, $level, $name) {
  @return map-get(map-get($config, $level), $name);
}
*/

// Initilize the global application theme
@mixin wm-init-application-theme($typography: $wm-typography, $theme: $wm-theme) {

  // Includes the core theme indepeneted material style
  @include mat-core($typography);

  // Include a selection of material theme styles
  //@include angular-material-theme($theme);
  @include custom-material-theme($theme);

  // Init the shared elements theme styles
  @include wm-elements-theme($theme);

  // Init the markdown renderer theme styles
  @include wm-markdown-theme($theme);

  // Defines an additional mat-link class to decorate links diviating
  // from the strict rules of material design for the sake of clarity
  .mat-link {
    cursor: pointer;
    color: mat-color($wm-primary) !important;
    text-decoration: underline;
  }
 
  // Adds custom application specific style extensions
  a[mat-link] {
    @extend .mat-link;
  }

  // Makes sure the content of mat-list is hidden when overflow globally
  mat-list { overflow: hidden;}

  // Resets the default mat-menu padding
  .mat-menu-content { padding: 0 !important;}

  // Resets the default menu typography to buttons
  .mat-menu-item {
    font: {
      family: mat-font-family($wm-typography, button);
      size:   mat-font-size($wm-typography, button);
      weight: mat-font-weight($wm-typography, button);
    }
    // Restores the same $mat-menu-icon-margin value
    wm-icon { padding-right: 16px;}
  }

  // Defines a global class to resets dialog container's padding on request
  // to be used in MatDialogConfig.panelClass when needed
  .mat-dialog-reset { mat-dialog-container { padding: 0;} }

  body {
    // Applies material typography rules globally
    @extend .mat-typography;
    // Applies material theme general colors
    @extend .mat-app-background;
  }
}
