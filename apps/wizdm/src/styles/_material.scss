
/*
// Creates a customized material typography first...
$wm-typography: mat-typography-config(
  $font-family:   $wm-font-family,
  $headline:      mat-typography-level(32px, 48px, 700),
  $title:         mat-typography-level(24px, 32px, 600),
  $subheading-2:  mat-typography-level(20px, 28px, 600),
  $subheading-1:  mat-typography-level(18px, 24px, 600),
  $body-2:        mat-typography-level(18px, 24px, 500),
  $body-1:        mat-typography-level(16px, 20px, 500),
  $button:        mat-typography-level(16px, 20px, 500)
);

//.. than extends with some application specific values
$wm-typography: extend-material-typography($wm-typography, 
  (
    logo:         mat-typography-level(22px, 24px, 600),
    social:       mat-typography-level(22px, 24px, 600),
    //footnote:   mat-typography-level(16px, 20px, 400),
    //toc:        mat-typography-level(18px, 24px, 500)
  ) 
);
*/

@function extend-material-typography($mat-config, $extension) {

  // Gets the general font family
  $font-family: map-get($mat-config, font-family);

  // Loop through the extension levels and set the `font-family` of the ones that don't have one.
  // Since Sass can't modify maps in place we need to merge and re-assign.
  @each $key, $level in $extension {
    @if map-get($level, font-family) == null {
      $new-level: map-merge($level, (font-family: $font-family));
      $extension: map-merge($extension, ($key: $new-level));
    }
  }

  // Returns the extended typography
  @return map-merge($mat-config, $extension);
}

/*
// Defines the main theme colors palettes.
$wm-primary: mat-palette($mat-blue);
$wm-accent:  mat-palette($mat-indigo, A200, A100, A400);
$wm-warn:    mat-palette($mat-red);

// Creates a standard material light theme first...
$wm-theme: mat-light-theme($wm-primary, $wm-accent, $wm-warn);

//... than extends the theme with customized fore/backgrounds
$wm-theme: extend-material-theme($wm-theme, 

  $foreground: (
    // Overwrites some Angular Material standard values
    base:              mat-color($wm-primary, 900),
    disabled-button:   rgba(mat-color($wm-primary, 900), 0.26),
    icon:              mat-color($wm-primary),
    icons:             mat-color($wm-primary),
    text:              rgba(mat-color($wm-primary, 900), 0.87),
    slider-min:        rgba(mat-color($wm-primary, 900), 0.87),
    slider-off:        rgba(mat-color($wm-primary, 900), 0.26),
    slider-off-active: rgba(mat-color($wm-primary, 900), 0.38),

    // Adds extra application specific foreground extension
    contrast:          white,
    edit-box:          rgba(white, 0.8),
  
    // Adds Elements/Markdown specific foreground extensions
    toggler:           mat-color($mat-grey, 500),
    action:            mat-color($wm-primary),
    link:              mat-color($wm-primary)
  ),

  $background: (
    // Overwrites some Angular Material standard values
    status-bar:       white,
    app-bar:          white,
    background:       white,

    // Appends extra application specific background extensions
    edit-box:         rgba(mat-color($mat-blue, 900), 0.8)
  )
);
*/

@function extend-material-theme($mat-theme, $foreground, $background) {
  // Gets the standard material maps of fore/background
  $mat-fore: map-get($mat-theme, foreground);
  $mat-back: map-get($mat-theme, background);

  // Merges the standard values with the extensions
  @return map-merge($mat-theme, (
    foreground: map-merge($mat-fore, $foreground),
    background: map-merge($mat-back, $background)
  ));
}

// Create a theme with selected component only.
@mixin custom-material-theme($theme) {
  @include mat-core-theme($theme);
  //@include mat-autocomplete-theme($theme);
  //@include mat-badge-theme($theme);
  //@include mat-bottom-sheet-theme($theme);
  @include mat-button-theme($theme);
  //@include mat-button-toggle-theme($theme);
  //@include mat-card-theme($theme);
  @include mat-checkbox-theme($theme);
  //@include mat-chips-theme($theme);
  //@include mat-table-theme($theme);
  @include mat-datepicker-theme($theme);
  @include mat-dialog-theme($theme);
  @include mat-divider-theme($theme);
  @include mat-expansion-panel-theme($theme);
  @include mat-form-field-theme($theme);
  //@include mat-grid-list-theme($theme);
  @include mat-icon-theme($theme);
  @include mat-input-theme($theme);
  @include mat-list-theme($theme);
  @include mat-menu-theme($theme);
  //@include mat-paginator-theme($theme);
  @include mat-progress-bar-theme($theme);
  @include mat-progress-spinner-theme($theme);
  //@include mat-radio-theme($theme);
  @include mat-select-theme($theme);
  //@include mat-sidenav-theme($theme);
  //@include mat-slide-toggle-theme($theme);
  //@include mat-slider-theme($theme);
  @include mat-stepper-theme($theme);
  //@include mat-sort-theme($theme);
  //@include mat-tabs-theme($theme);
  @include mat-toolbar-theme($theme);
  //@include mat-tooltip-theme($theme);
  //@include mat-tree-theme($theme);
  //@include mat-snack-bar-theme($theme);
}

/*
@mixin custom-material-theme($theme, $config: null) {

  @if $config == null {
    $config: ('autocomplete', 'badge', 'bottom', 'button', 'button-toggle', 'card', 'checkbox', 'chips', 'table', 'datepicker', 'dialog', 'divider', 'expansion-panel', 'form-field', 'grid-list', 'icon', 'input', 'list', 'menu', 'paginator', 'progress-bar', 'progress-spinner', 'radio', 'select', 'sidenav', 'slide', 'slider', 'stepper', 'sort', 'tabs', 'toolbar', 'tooltip', 'tree', 'snack-bar');
  }

  @include mat-core-theme($theme);

  @each $cmp in $config {
    @include mat-#{cmp}-theme($theme);
  } 
}
*/
